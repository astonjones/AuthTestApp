@model PaginatedList<AuthTestApp.Models.VicidialCarrierLog>


<div class="Container p-3">
    <div class="row justify-content-between py-4">
        <div class="col-4">
            <h2 class="text-primary">ViciDial Carrier Log Table</h2>
        </div>
    </div>

    <form>
        <div class="form-actions no-color">
            <p>
                Search by DialStatus or Dial Time: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
                <input type="submit" value="Search" class="btn btn-sm btn-info" />
                <a asp-action="Index" class=" btn btn-sm btn-warning">Back to Full List</a>
            </p>
        </div>
    </form>

    <br /><br />

    @if (Model.Count() > 0)
    {
        var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
        var nextDisabled = !Model.HasNextPage ? "disabled" : "";

        <div class="d-flex justify-content-between">
            <div>
                <p>@Model.PageSize Records Per Page | Page - @Model.PageIndex out of @Model.TotalPages</p>
                <p>Total Records: @Model.RecordCount</p>
            </div>
            <div>
                <a asp-action="Index"
                   asp-route-sortOrder="@ViewData["CurrentSort"]"
                   asp-route-pageNumber="@(Model.PageIndex - 1)"
                   asp-route-currentFilter="@ViewData["CurrentFilter"]"
                   class="btn btn-outline-secondary @prevDisabled">
                    Previous
                </a>
                <a asp-action="Index"
                   asp-route-sortOrder="@ViewData["CurrentSort"]"
                   asp-route-pageNumber="@(Model.PageIndex + 1)"
                   asp-route-currentFilter="@ViewData["CurrentFilter"]"
                   class="btn btn-outline-secondary @nextDisabled">
                    Next
                </a>
            </div>
        </div>

        <table class="table table-bordered table-striped" style="width:100%">
            <thead>
                <tr>
                    <th>
                        <a asp-action="Index" asp-route-sortOrder="@ViewData["DateSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Date</a>
                    </th>
                    <th>
                        <a asp-action="Index" asp-route-sortOrder="@ViewData["DialStatusSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Dial Status</a>
                    </th>
                    <th>
                        <a asp-action="Index" asp-route-sortOrder="@ViewData["DialTimeSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Dial Time</a>
                    </th>
                    <th>
                        Hang up reason
                    </th>
                    <th>
                        Caller code
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var obj in Model)
                {
                <tr>
                    <td>@obj.CallDate</td>
                    <td>@obj.Dialstatus</td>
                    <td>@obj.DialTime</td>
                    <td>@obj.SipHangupReason</td>
                    <td>@obj.CallerCode</td>
                    <td class="w-75 btn-group" role="group">
                        <a asp-controller="VicidialApiLog" asp-route-Id="@obj.ApiId" asp-action="Details" class="mx-1">Details</a>
                    </td>
                </tr>
                }
            </tbody>
        </table>

        <div class="d-flex justify-content-between">
            <div>
                <p>@Model.PageSize Records Per Page | Page - @Model.PageIndex out of @Model.TotalPages</p>
                <p>Total Records: @Model.RecordCount</p>
            </div>
            <div>
                <a asp-action="Index"
                   asp-route-sortOrder="@ViewData["CurrentSort"]"
                   asp-route-pageNumber="@(Model.PageIndex - 1)"
                   asp-route-currentFilter="@ViewData["CurrentFilter"]"
                   class="btn btn-outline-secondary @prevDisabled">
                    Previous
                </a>
                <a asp-action="Index"
                   asp-route-sortOrder="@ViewData["CurrentSort"]"
                   asp-route-pageNumber="@(Model.PageIndex + 1)"
                   asp-route-currentFilter="@ViewData["CurrentFilter"]"
                   class="btn btn-outline-secondary @nextDisabled">
                    Next
                </a>
            </div>
        </div>

    }
    else
    {
        <p>No Records exists here</p>
    }
</div>
